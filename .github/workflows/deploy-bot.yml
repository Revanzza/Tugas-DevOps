name: Deploy KRS App to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code dari repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup Python environment
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'

    # Step 3: Add private key from GitHub Secrets
    - name: Add SSH private key
      run: |
        echo "${{ secrets.AWS_EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    # Step 4: Copy files to EC2
    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i private_key.pem -r * ubuntu@35.174.12.119:/home/ubuntu/discord-bot/

    # Step 5: Install dependencies on EC2
    - name: Install dependencies on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@35.174.12.119 << 'EOF'
        cd /home/ubuntu/discord-bot/
        python3 -m venv venv  # Membuat virtual environment di EC2
        source venv/bin/activate  # Mengaktifkan virtual environment
        pip install -r requirements.txt  # Instal dependencies di venv
        EOF

    # Step 6: Run KRS App on EC2
    - name: Run KRS App on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@35.174.12.119 << 'EOF'
        cd /home/ubuntu/discord-bot/
        source venv/bin/activate  # Mengaktifkan virtual environment
        export DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
        export DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}
        export MONITOR_URL=${{ secrets.MONITOR_URL }}
        nohup python3 KRS-app.py > KRS-app.log 2>&1 &  # Menjalankan bot dengan nohup
        EOF

    # Step 7: Fetch KRS app log from EC2
    - name: Fetch KRS app log from EC2
      run: |
        scp -o StrictHostKeyChecking=no -i private_key.pem ubuntu@35.174.12.119:/home/ubuntu/discord-bot/KRS-app.log .

    # Step 8: Save KRS app log as artifact
    - name: Save KRS app log as artifact
      uses: actions/upload-artifact@v4
      with:
        name: krs-app-log
        path: /home/ubuntu/discord-bot/krs-app.log

    # Step 9: Clean up SSH key
    - name: Clean up SSH key
      run: rm private_key.pem